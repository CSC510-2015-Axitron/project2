for repo in "group1" "group2" "group3" "group4" "group5" "group6" "group7" "group8" "group9"
do sqlite3 -csv ${repo}.db "select cl.issueID, (cl.time - op.time) as timeOpen from event cl, (select issueID, min(time) as time from event group by issueID) op where cl.action == 'closed' AND cl.issueID == op.issueID;" > ./csv/${repo}_open_close.csv
sqlite3 -csv ${repo}.db "select ev.issueID, ev.time-milestone.due_at as secondsAfter from (select issueID, time, milestone from event ev1 where action = 'closed' and milestone not null and time >= (select max(time) from event where issueID = ev1.issueID and action = 'closed')) ev, milestone where milestone.id = ev.milestone;" > ./csv/${repo}_milestone_delay.csv
sqlite3 -csv ${repo}.db "select e1.issueID, (e1.time - (mileDur.due_at - mileDur.duration)) as timeAfterStart, mileDur.duration as duration from event e1, (select m2.id, m2.due_at, (m2.due_at - m1.due_at) as duration from milestone m1, milestone m2 where m2.id = m1.id+1) mileDur where e1.milestone = mileDur.id and e1.action = 'closed' and e1.time >= (select max(time) from event where event.action = 'closed' and issueID = e1.issueID);" > ./csv/${repo}_preshooting.csv
sqlite3 -csv ${repo}.db "select label, count(*) from (select issueID, label from event e1 where action = 'assigned' and time >= (select max(time) from event where e1.issueID = issueID and action = 'assigned')) group by label;" > ./csv/${repo}_assignments.csv
done
